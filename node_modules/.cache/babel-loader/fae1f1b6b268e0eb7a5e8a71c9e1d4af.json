{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\prabh\\\\Desktop\\\\Cowin\\\\VaccineSlotChecker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _objectSpread from \"C:\\\\Users\\\\prabh\\\\Desktop\\\\Cowin\\\\VaccineSlotChecker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\prabh\\\\Desktop\\\\Cowin\\\\VaccineSlotChecker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\prabh\\\\Desktop\\\\Cowin\\\\VaccineSlotChecker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\prabh\\\\Desktop\\\\Cowin\\\\VaccineSlotChecker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\prabh\\\\Desktop\\\\Cowin\\\\VaccineSlotChecker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\prabh\\\\Desktop\\\\Cowin\\\\VaccineSlotChecker\\\\src\\\\container\\\\Authentication\\\\LoginPage.jsx\";\nimport React, { Component } from \"react\";\nimport TestComponent from \"../../component/TestComponent\";\nimport Navbar from \"../../component/Boilerplate/Navbar\";\nimport { connect } from \"react-redux\";\nimport { Alert } from \"react-bootstrap\";\nimport LoginPageComponent from \"../../component/Authentication/LoginPage\";\nimport { AuthenticateUser, cowinapi, sendAlert } from \"../../Utilities/ApiRequests\";\nimport NavbarContainer from \"../Navbar/Navbar\";\nimport { Redirect } from \"react-router-dom\";\nimport ItemRow from \"../../component/display/itemrow\";\n\nvar LoginPage = /*#__PURE__*/function (_Component) {\n  _inherits(LoginPage, _Component);\n\n  var _super = _createSuper(LoginPage);\n\n  function LoginPage() {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isSubmitted: false,\n      availableSlots: [],\n      values: {},\n      isEmailSent: false\n    };\n\n    _this.handleSubmit = function (values) {\n      // console.log(\"Values\");\n      // console.log(values);\n      cowinapi(values).then(function (resp) {\n        console.log(\"API Response\");\n        console.log(resp.data.centers);\n        var sessionData = [];\n        resp.data.centers.forEach(function (center) {\n          center.sessions.forEach(function (session) {\n            var temp = _objectSpread(_objectSpread({}, session), center);\n\n            sessionData.push(temp);\n          });\n        });\n        console.log(\"SessionData\");\n        console.log(sessionData);\n\n        if (_this.state.isEmailSent === false) {\n          var _iterator = _createForOfIteratorHelper(sessionData),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var session = _step.value;\n\n              if (session.available_capacity !== 0) {\n                sendAlert(values.user_email).then(function (resp) {\n                  console.log(\"Email Sent\");\n                  console.log(resp);\n                });\n                break;\n\n                _this.state.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                  isEmailSent: true\n                }));\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n\n        _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n          isSubmitted: true,\n          availableSlots: sessionData,\n          values: values\n        }));\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.homeClick = function () {\n      _this.setState({\n        isSubmitted: false,\n        availableSlots: [],\n        values: {},\n        isEmailSent: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", {\n        className: \"nav-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(NavbarContainer, {\n        homeClick: this.homeClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      })), true ? /*#__PURE__*/React.createElement(React.Fragment, null, this.state.isSubmitted === false ? /*#__PURE__*/React.createElement(LoginPageComponent, {\n        handleSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }) : /*#__PURE__*/React.createElement(TestComponent, {\n        session: this.state.availableSlots,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      })) : this.state.availableSlots.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, \"Hello\") : /*#__PURE__*/React.createElement(React.Fragment, null));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // setInterval(() => this.handleSubmit(this.state.values), 10000);\n      setInterval(function () {\n        // console.log(\"Refreshing\");\n        if (_this2.state.isSubmitted === true) {\n          _this2.handleSubmit(_this2.state.values);\n        }\n      }, 30000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }]);\n\n  return LoginPage;\n}(Component);\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Users/prabh/Desktop/Cowin/VaccineSlotChecker/src/container/Authentication/LoginPage.jsx"],"names":["React","Component","TestComponent","Navbar","connect","Alert","LoginPageComponent","AuthenticateUser","cowinapi","sendAlert","NavbarContainer","Redirect","ItemRow","LoginPage","state","isSubmitted","availableSlots","values","isEmailSent","handleSubmit","then","resp","console","log","data","centers","sessionData","forEach","center","sessions","session","temp","push","available_capacity","user_email","setState","catch","err","homeClick","length","setInterval","clearInterval","interval"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport TestComponent from \"../../component/TestComponent\";\r\nimport Navbar from \"../../component/Boilerplate/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport LoginPageComponent from \"../../component/Authentication/LoginPage\";\r\nimport {\r\n  AuthenticateUser,\r\n  cowinapi,\r\n  sendAlert\r\n} from \"../../Utilities/ApiRequests\";\r\nimport NavbarContainer from \"../Navbar/Navbar\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ItemRow from \"../../component/display/itemrow\";\r\nclass LoginPage extends Component {\r\n  state = {\r\n    isSubmitted: false,\r\n    availableSlots: [],\r\n    values: {},\r\n    isEmailSent:false\r\n  };\r\n  handleSubmit = (values) => {\r\n    // console.log(\"Values\");\r\n    // console.log(values);\r\n    cowinapi(values)\r\n      .then((resp) => {\r\n        console.log(\"API Response\");\r\n        console.log(resp.data.centers);\r\n        var sessionData = [];\r\n        resp.data.centers.forEach((center) => {\r\n          center.sessions.forEach((session) => {\r\n            var temp = {\r\n              ...session,\r\n              ...center\r\n            };\r\n            sessionData.push(temp);\r\n          });\r\n        });\r\n        console.log(\"SessionData\");\r\n        console.log(sessionData);\r\n        if(this.state.isEmailSent === false)\r\n        {\r\n        for (var session of sessionData) {\r\n          if (session.available_capacity !== 0) {\r\n            sendAlert(values.user_email).then((resp) => {\r\n              console.log(\"Email Sent\");\r\n              console.log(resp);\r\n            });\r\n            break;\r\n            this.state.setState({\r\n              ...this.state,\r\n              isEmailSent:true\r\n            })\r\n          }\r\n        }\r\n      }\r\n        this.setState({\r\n          ...this.state,\r\n          isSubmitted: true,\r\n          availableSlots: sessionData,\r\n          values: values\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  homeClick = () => {\r\n    this.setState({\r\n      isSubmitted: false,\r\n      availableSlots: [],\r\n      values: {},\r\n      isEmailSent:false\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section className=\"nav-section\">\r\n          <NavbarContainer homeClick={this.homeClick} />\r\n        </section>\r\n        {true ? (\r\n          <>\r\n            {this.state.isSubmitted === false ? (\r\n              <LoginPageComponent handleSubmit={this.handleSubmit} />\r\n            ) : (\r\n              <TestComponent session={this.state.availableSlots} />\r\n            )}\r\n          </>\r\n        ) : this.state.availableSlots.length === 0 ? (\r\n          <p>Hello</p>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    // setInterval(() => this.handleSubmit(this.state.values), 10000);\r\n\r\n    setInterval(() => {\r\n      // console.log(\"Refreshing\");\r\n      if (this.state.isSubmitted === true) {\r\n        this.handleSubmit(this.state.values);\r\n      }\r\n    }, 30000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}